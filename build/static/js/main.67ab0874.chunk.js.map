{"version":3,"sources":["formula/npkCalculation.js","theme.js","components/CalculatorInput.js","components/Calculator.js","components/Output.js","App.js","index.js"],"names":["npkCalculation","navigation","formulaLabrary","inputs","subItens","npkNeeded","nitrogen","phosphor","potassium","npkSaca","npkRelation","tecnologie","tecnologieAdjuste","Object","keys","forEach","item","productivity","value","productivityAdjuste","potassiumAdjuste","phosphorAdjuste","distanceLines","distancePlants","plantsDensityAdjuste","temperature","temperatureAdjuste","correctFormula","filter","formula","console","log","P","filterPhosphor","potassiumRelation","K","N","filterPotassium","qtdArea","Math","max","min","totalNutrients","qtdPlants","theme","createTheme","typography","h2","fontSize","fontWeight","fontFamily","h3","palette","primary","main","secondary","CalculatorInput","input","name","hasSoloAnalisys","changeInput","decInput","accInput","className","TextField","fullWidth","label","onChange","event","target","type","InputProps","endAdornment","InputAdornment","position","unit","size","Fab","onClick","color","Remove","style","Add","Calculator","calculatorInputs","map","config","Output","Typography","variant","toFixed","App","useState","library","setNavigation","setFormula","AppBar","Toolbar","IconButton","edge","Main","Switch","checked","userNavigation","Number","step","styled","icon","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.67ab0874.chunk.js","sourcesContent":["const npkCalculation = ({ navigation, formulaLabrary }) => {\n    const inputs = { ...navigation[1].subItens[0].inputs };\n    let npkNeeded = {\n        nitrogen: [6.2, 6.2],\n        phosphor: [0.6, 0.6],\n        potassium: [5.9, 5.9],\n    };\n\n    const npkSaca = {\n        nitrogen: [6.2, 6.2],\n        phosphor: [0.6, 0.6],\n        potassium: [5.9, 5.9],\n    }\n\n    const tecnologieAdjuste = (tecnologie, npkNeeded) => {\n        if (tecnologie === 'convencional') {\n            npkNeeded.nitrogen = [npkNeeded.nitrogen[0] * 1.5, npkNeeded.nitrogen[1] * 1.7];\n            npkNeeded.phosphor = [npkNeeded.phosphor[0] * 1.3, npkNeeded.phosphor[1] * 1.5];\n            npkNeeded.potassium = [npkNeeded.potassium[0] * 1.3, npkNeeded.potassium[1] * 1.5];\n        }\n        return npkNeeded;\n    }\n\n    function plantsDensityAdjuste(npkNeeded) {\n\n        let plantDensity = 10000 / (inputs.distanceLines.value * inputs.distancePlants.value);\n\n        if (plantDensity > 6000) {\n            Object.keys(npkNeeded).forEach(item => npkNeeded[item] = [npkNeeded[item][0] -= 0.25 * npkSaca[item][0], npkNeeded[item][1] -= 0.2 * npkSaca[item][1]])\n        }\n\n        return npkNeeded;\n\n    }\n\n    function temperatureAdjuste(npkNeeded) {\n\n        if (inputs.temperature.value < 19) {\n            npkNeeded.nitrogen = [npkNeeded.nitrogen[0] -= 0.15 * npkSaca.nitrogen[0], npkNeeded.nitrogen[1] -= 0.1 * npkSaca.nitrogen[1]]\n        }\n\n        else if (inputs.temperature.value > 22) {\n            npkNeeded.nitrogen = [npkNeeded.nitrogen[0] += 0.15 * npkSaca.nitrogen[0], npkNeeded.nitrogen[1] += 0.2 * npkSaca.nitrogen[1]]\n        }\n\n        return npkNeeded;\n\n    }\n\n    const phosphorAdjuste = (npkNeeded) => {\n\n        if (inputs.phosphor.value < 10) {\n            npkNeeded.phosphor = [npkNeeded.phosphor[0], npkNeeded.phosphor[1]]\n        }\n\n        else if (inputs.phosphor.value < 20) {\n            npkNeeded.phosphor = [npkNeeded.phosphor[0] -= 0.5 * npkSaca.phosphor[0], npkNeeded.phosphor[1] -= 0.5 * npkSaca.phosphor[1]]\n        }\n\n        else {\n            npkNeeded.phosphor = [0, 0];\n        }\n\n        return npkNeeded;\n    }\n\n\n    const potassiumAdjuste = (npkNeeded) => {\n        if (inputs.potassium.value < 60) {\n            npkNeeded.potassium = [npkNeeded.potassium[0] += 0.2 * npkSaca.potassium[0], npkNeeded.potassium[1] += 0.3 * npkSaca.potassium[1]]\n        }\n\n        else if (inputs.potassium.value < 110) {\n            npkNeeded.potassium = [npkNeeded.potassium[0], npkNeeded.potassium[1]]\n        }\n\n        else if (inputs.potassium.value < 160) {\n            npkNeeded.potassium = [npkNeeded.potassium[0] -= (1 / 3) * npkSaca.potassium[0], npkNeeded.potassium[1] -= (1 / 3) * npkSaca.potassium[1]]\n        }\n\n        else {\n            npkNeeded.potassium = [0, 0];\n        }\n\n        return npkNeeded;\n\n    }\n\n    const productivityAdjuste = (npkNeeded) => {\n        Object.keys(npkNeeded).forEach(item => npkNeeded[item] = [npkNeeded[item][0] * inputs.productivity.value, npkNeeded[item][1] * inputs.productivity.value]);\n        return npkNeeded;\n    }\n\n    npkNeeded = temperatureAdjuste(npkNeeded);\n    npkNeeded = plantsDensityAdjuste(npkNeeded)\n    npkNeeded = phosphorAdjuste(npkNeeded);\n    npkNeeded = potassiumAdjuste(npkNeeded);\n    npkNeeded = productivityAdjuste(npkNeeded);\n    npkNeeded = tecnologieAdjuste('convencional', npkNeeded);\n\n    const npkRelation = {\n        phosphor: [npkNeeded.phosphor[0] / npkNeeded.nitrogen[1], npkNeeded.phosphor[1] / npkNeeded.nitrogen[0]],\n        potassium: [npkNeeded.potassium[0] / npkNeeded.nitrogen[1], npkNeeded.potassium[1] / npkNeeded.nitrogen[0]]\n    }\n\n    const filterPhosphor = (formula) => {\n        console.log(npkRelation.phosphor[1]);\n        if (npkRelation.phosphor[1] > 0) {\n            return formula.P > 0;\n        } return formula.P === 0;\n\n    }\n\n    const filterPotassium = (formula) => {\n        const potassiumRelation = formula.K / formula.N;\n        return (potassiumRelation >= npkRelation.potassium[0] && potassiumRelation <= npkRelation.potassium[1])\n    }\n\n    const totalNutrients = () => {\n        let qtdArea = [];\n        if (correctFormula[0].K > 0) {\n            qtdArea = [\n                Math.max((100 * npkNeeded.nitrogen[0] / correctFormula[0].N), (100 * npkNeeded.potassium[0] / correctFormula[0].K)),\n                Math.min((100 * npkNeeded.nitrogen[1] / correctFormula[0].N), (100 * npkNeeded.potassium[1] / correctFormula[0].K))\n            ];\n        }\n        if (correctFormula[0].K === 0) {\n            qtdArea = [100 * npkNeeded.nitrogen[0] / correctFormula[0].N, 100 * npkNeeded.nitrogen[1] / correctFormula[0].N];\n        }\n        return (qtdArea);\n    }\n\n    const correctFormula = formulaLabrary.filter(formula => filterPhosphor(formula)).filter(formula => filterPotassium(formula));\n\n\n    const qtdArea = totalNutrients()\n\n    const qtdPlants = [qtdArea[0] / (10 / (inputs.distanceLines.value * inputs.distancePlants.value)), qtdArea[1] / (10 / (inputs.distanceLines.value * inputs.distancePlants.value))]\n\n    return {\n        formula: correctFormula[0],\n        qtdArea: qtdArea,\n        qtdPlants: qtdPlants\n    };\n\n}\n\nexport default npkCalculation;","import { createTheme } from '@material-ui/core/styles';\n\nconst theme = createTheme({\n    typography: {\n        h2: {\n            fontSize: '25.6px',\n            fontWeight: 600,\n            fontFamily: 'Inter',\n        },\n        h3: {\n            fontSize: '48px',\n            fontWeight: 300,\n        }\n    },\n    palette: {\n        primary: {\n            main: '#F75F43'\n        },\n        secondary: {\n            main: '#F0754F'\n        }\n    }\n});\n\nexport default theme;","import React from 'react';\nimport { Fab, InputAdornment, TextField } from '@material-ui/core';\nimport { Add, Remove } from '@material-ui/icons';\n\nimport './CalculatorInput.css'\n\nconst CalculatorInput = ({ input, name, hasSoloAnalisys, changeInput, decInput, accInput }) => {\n\n\n    if (!hasSoloAnalisys && (name === 'phosphor' || name === 'potassium')) {\n        return <></>\n    }\n    return (\n        <li className='input'>\n            <div className='input-area'>\n                <TextField\n                    fullWidth\n                    label={input.label}\n                    value={(input.value === 0) ? '' : input.value}\n                    onChange={(event) => changeInput(event.target.value, name)}\n                    type='number'\n                    InputProps={{\n                        endAdornment: < InputAdornment position=\"end\">{input.unit}</InputAdornment>\n                    }}\n                    size='medium'\n                />\n            </div>\n            <div className='input-change-buttons'>\n                <Fab onClick={() => decInput(name)} size='small' color='secondary'>\n                    <Remove\n                        style={{ color: '#FFFFFF' }}\n                    />\n                </Fab>\n                <Fab onClick={() => accInput(name)} size='small' color='primary'>\n                    <Add\n                        style={{ color: '#FFFFFF' }}\n                    />\n                </Fab>\n            </div>\n        </li>\n    )\n}\n\nexport default CalculatorInput;","import CalculatorInput from './CalculatorInput';\nimport './Calculator.css';\n\n\n\nconst Calculator = ({ navigation, changeInput, decInput, accInput }) => {\n    const calculatorInputs = navigation[1].subItens[0].inputs;\n\n    return (\n        <ul>\n            {Object.keys(calculatorInputs).map((input) =>\n                <CalculatorInput\n                    input={navigation[1].subItens[0].inputs[input]}\n                    name={input} hasSoloAnalisys={navigation[1].config.hasSoloAnalisys}\n                    changeInput={changeInput}\n                    decInput={decInput}\n                    accInput={accInput}\n                />)}\n        </ul>\n    )\n}\n\nexport default Calculator;","import { Typography } from '@material-ui/core';\nimport './Output.css'\n\nconst Output = ({ formula }) => {\n    return (\n        <div className='output-card'>\n            <h2 className='output-title'>Correção Nescessária</h2>\n            <ul>\n                <li className='output-line'>\n                    <Typography variant='subtitle2' color='primary'>\n                        Formulado\n                    </Typography>\n                    <span className='output-qtd-min'>\n                        {formula.formula.N}-{formula.formula.P}-{formula.formula.K}\n                    </span>\n                </li>\n                <li className='output-line'>\n                    <span className='output-label'>\n                        Quantidade por Hectare:\n                    </span>\n                    <span className='output-qtd'>\n                        <span className='output-qtd-min'>\n                            {formula.qtdArea[0].toFixed(0)} Kg - {formula.qtdArea[1].toFixed(0)} kg\n                        </span>\n                    </span>\n                </li>\n                <li className='output-line'>\n                    <span className='output-label'>\n                        Quantidade por planta:\n                    </span>\n                    <span className='output-qtd-min'>\n                        {formula.qtdPlants[0].toFixed(0)} g - {formula.qtdPlants[1].toFixed(0)} g\n                    </span>\n                </li>\n            </ul>\n        </div>\n    )\n}\n\nexport default Output;","import React, { useState } from \"react\";\nimport { Switch, Typography } from '@material-ui/core';\nimport { MuiThemeProvider, createTheme } from '@material-ui/core/styles';\nimport npkCalculation from \"./formula/npkCalculation\";\nimport theme from './theme';\nimport './App.css';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport styled from 'styled-components';\n\n\nimport Calculator from './components/Calculator'\nimport Output from \"./components/Output\";\n\n\nfunction App() {\n\tconst [navigation, setNavigation] = useState(library);\n\tconst [formula, setFormula] = useState({\n\t\tformula: { N: 20, P: 5, K: 15 },\n\t\tqtdArea: [1790, 1844],\n\t\tqtdPlants: [537, 553]\n\t});\n\n\tconst hasSoloAnalisys = () => {\n\t\tconst userNavigation = [...navigation]\n\t\tuserNavigation[1].config.hasSoloAnalisys = !userNavigation[1].config.hasSoloAnalisys;\n\t\tif (!userNavigation[1].config.hasSoloAnalisys) {\n\t\t\tuserNavigation[1].subItens[0].inputs['phosphor'].value = 8;\n\t\t\tuserNavigation[1].subItens[0].inputs['potassium'].value = 80;\n\t\t}\n\t\tsetNavigation(userNavigation);\n\t\tsetFormula(npkCalculation({ navigation, formulaLabrary }));\n\t}\n\n\tconst changeInput = (value, name) => {\n\t\tconst userNavigation = [...navigation];\n\t\tuserNavigation[1].subItens[0].inputs[name].value = Number(value);\n\t\tsetNavigation(userNavigation);\n\t\tsetFormula(npkCalculation({ navigation, formulaLabrary }));\n\t}\n\n\tconst decInput = (name) => {\n\t\tconst userNavigation = [...navigation];\n\t\tlet step = 0;\n\t\tif (name === 'productivity') { step = 5 }\n\t\tif (name === 'distanceLines') { step = 0.5 }\n\t\tif (name === 'distancePlants') { step = 0.1 }\n\t\tif (name === 'temperature') { step = 1 }\n\t\tif (name === 'phosphor') { step = 1 }\n\t\tif (name === 'potassium') { step = 10 }\n\t\tif (userNavigation[1].subItens[0].inputs[name].value <= step) { return }\n\t\tuserNavigation[1].subItens[0].inputs[name].value = Number((userNavigation[1].subItens[0].inputs[name].value - step).toFixed(1));\n\t\tsetNavigation(userNavigation);\n\t\tsetFormula(npkCalculation({ navigation, formulaLabrary }));\n\t}\n\n\tconst accInput = (name) => {\n\t\tconst userNavigation = [...navigation];\n\t\tlet step = 0;\n\t\tif (name === 'productivity') { step = 5 }\n\t\tif (name === 'distanceLines') { step = 0.5 }\n\t\tif (name === 'distancePlants') { step = 0.1 }\n\t\tif (name === 'temperature') { step = 1 }\n\t\tif (name === 'phosphor') { step = 1 }\n\t\tif (name === 'potassium') { step = 10 }\n\n\t\tuserNavigation[1].subItens[0].inputs[name].value = Number((userNavigation[1].subItens[0].inputs[name].value + step).toFixed(1));\n\t\tsetNavigation(userNavigation);\n\t\tsetFormula(npkCalculation({ navigation, formulaLabrary }));\n\t}\n\n\treturn (\n\n\t\t<div className='root'>\n\t\t\t<MuiThemeProvider theme={theme}>\n\t\t\t\t<AppBar position=\"fixed\" color='inherit'>\n\t\t\t\t\t<Toolbar variant=\"dense\">\n\t\t\t\t\t\t<IconButton edge=\"start\" color=\"primary\" aria-label=\"menu\">\n\t\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t<Typography variant=\"h2\" color=\"primary\">\n\t\t\t\t\t\t\tSimulador\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t\t<Main>\n\t\t\t\t\t<div className='solo-analisys'>\n\t\t\t\t\t\t<p className='solo-analisys-label'>Possuo analise de solo</p>\n\t\t\t\t\t\t<Switch\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tchecked={navigation[1].config.hasSoloAnalisys}\n\t\t\t\t\t\t\tonChange={hasSoloAnalisys}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<ul className='calculator-navigation'>\n\t\t\t\t\t\t<li className='calculator-navigation-item'>Macro Nutrientes</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<Calculator\n\t\t\t\t\t\tnavigation={navigation}\n\t\t\t\t\t\tchangeInput={changeInput}\n\t\t\t\t\t\tdecInput={decInput}\n\t\t\t\t\t\taccInput={accInput}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Output\n\t\t\t\t\t\tformula={formula}\n\t\t\t\t\t/>\n\t\t\t\t</Main>\n\t\t\t</MuiThemeProvider>\n\t\t</div>\n\t);\n}\n\nexport default App;\n\nconst Main = styled.main`\n\tpadding: 48px 20px;\n`\n\nconst library = [\n\t{\n\t\tlabel: 'Tela Inicial',\n\t\ticon: <ion-icon name=\"home-outline\"></ion-icon>,\n\t\tsubItens: null,\n\t},\n\t{\n\t\tlabel: 'Calculadoras',\n\t\ticon: <ion-icon name=\"calculator-outline\"></ion-icon>,\n\t\tconfig: { hasSoloAnalisys: true },\n\t\tsubItens: [\n\t\t\t{\n\t\t\t\tlabel: 'Macro Nutrientes',\n\t\t\t\tinputs: {\n\t\t\t\t\tproductivity: {\n\t\t\t\t\t\tvalue: 35,\n\t\t\t\t\t\tunit: 'sc/ha',\n\t\t\t\t\t\tlabel: 'Produtividade Esperada'\n\t\t\t\t\t},\n\t\t\t\t\tdistanceLines: {\n\t\t\t\t\t\tvalue: 3,\n\t\t\t\t\t\tunit: 'm',\n\t\t\t\t\t\tlabel: 'Distância entre Linhas'\n\t\t\t\t\t},\n\t\t\t\t\tdistancePlants: {\n\t\t\t\t\t\tvalue: 1,\n\t\t\t\t\t\tunit: 'm',\n\t\t\t\t\t\tlabel: 'Distância entre Plantas'\n\t\t\t\t\t},\n\t\t\t\t\ttemperature: {\n\t\t\t\t\t\tvalue: 20,\n\t\t\t\t\t\tunit: 'ºC',\n\t\t\t\t\t\tlabel: 'Temperatura média anual'\n\t\t\t\t\t},\n\t\t\t\t\tphosphor: {\n\t\t\t\t\t\tvalue: 8,\n\t\t\t\t\t\tunit: 'P mg/dm³',\n\t\t\t\t\t\tlabel: 'Fósforo'\n\t\t\t\t\t},\n\t\t\t\t\tpotassium: {\n\t\t\t\t\t\tvalue: 80,\n\t\t\t\t\t\tunit: 'K mg/dm³',\n\t\t\t\t\t\tlabel: 'Potássio'\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{ label: 'Correção de Acidez' },\n\t\t\t{ label: 'Micro Nutrientes' },\n\t\t],\n\t},\n\t{\n\t\tlabel: 'Cotações',\n\t\ticon: <div className='money-icon'>$</div>,\n\t\tsubItens: null,\n\t},\n\t{\n\t\tlabel: 'Loja',\n\t\ticon: <ion-icon name=\"storefront-outline\"></ion-icon>,\n\t\tsubItens: null,\n\t}\n];\n\nconst formulaLabrary = [\n\t{ N: 20, P: 5, K: 20 },\n\t{ N: 20, P: 5, K: 15 },\n\t{ N: 20, P: 5, K: 10 },\n\t{ N: 25, P: 0, K: 25 },\n\t{ N: 20, P: 0, K: 10 },\n\t{ N: 30, P: 0, K: 0 },\n\t{ N: 25, P: 5, K: 0 },\n\t{ N: 20, P: 0, K: 15 }\n]\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}